name: Update Twitter Feed (Free)

on:
  # schedule:
  #   - cron: '0 6 * * *'  # Daily at 6 AM (disabled due to RSS issues)
  workflow_dispatch:

jobs:
  update-twitter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Fetch Twitter feeds with fallbacks
        run: |
          npm init -y
          npm install rss-parser
          
          cat > fetch-twitter-rss.js << 'EOF'
          const Parser = require('rss-parser');
          const fs = require('fs');
          
          async function fetchTwitterRSS() {
            const parser = new Parser();
            
            // Multiple RSS sources to try
            const feedSources = [
              {
                name: 'RSSHub',
                anpl: 'https://rsshub.app/twitter/user/ANPL_Technion',
                vadim: 'https://rsshub.app/twitter/user/vadim_indelman'
              },
              {
                name: 'Nitter.net',
                anpl: 'https://nitter.net/ANPL_Technion/rss',
                vadim: 'https://nitter.net/vadim_indelman/rss'
              },
              {
                name: 'Nitter.it',
                anpl: 'https://nitter.it/ANPL_Technion/rss',
                vadim: 'https://nitter.it/vadim_indelman/rss'
              }
            ];
            
            for (const source of feedSources) {
              try {
                console.log(`Trying ${source.name}...`);
                
                const anplFeed = await parser.parseURL(source.anpl);
                const vadimFeed = await parser.parseURL(source.vadim);
                
                if (anplFeed.items.length > 0 || vadimFeed.items.length > 0) {
                  const tweets = [
                    ...anplFeed.items.slice(0, 2).map(item => ({
                      id: item.guid || item.link,
                      text: item.title || item.contentSnippet || 'No content',
                      created_at: item.pubDate || new Date().toISOString(),
                      account: 'ANPL_Technion',
                      handle: '@ANPL_Technion',
                      link: item.link
                    })),
                    ...vadimFeed.items.slice(0, 2).map(item => ({
                      id: item.guid || item.link,
                      text: item.title || item.contentSnippet || 'No content',
                      created_at: item.pubDate || new Date().toISOString(),
                      account: 'vadim_indelman',
                      handle: '@vadim_indelman',
                      link: item.link
                    }))
                  ].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
                  
                  if (tweets.length > 0) {
                    fs.writeFileSync('_data/tweets.json', JSON.stringify(tweets, null, 2));
                    console.log(`Successfully updated from ${source.name}!`);
                    return;
                  }
                }
              } catch (error) {
                console.log(`${source.name} failed:`, error.message);
                continue;
              }
            }
            
            console.log('All RSS sources failed, keeping existing data');
          }
          
          fetchTwitterRSS();
          EOF
          
          node fetch-twitter-rss.js
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add _data/tweets.json
          git diff --staged --quiet || git commit -m "Update Twitter feed via RSS" || echo "No changes to commit"
          git push || echo "Nothing to push"